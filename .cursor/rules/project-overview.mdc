---
description: 
globs: 
alwaysApply: true
---
# Spring Bean Navigator VSCode Extension 프로젝트 개요

## 프로젝트 목표
Spring Bean Navigator는 Java/Kotlin Spring 프레임워크 개발자를 위한 VSCode Extension입니다. 
클래스 멤버로 스프링 빈을 사용할 때 Editor에 아이콘을 표시하여 해당 빈의 구현 클래스로 쉽게 이동할 수 있도록 돕습니다.

## 핵심 기능
1. **Bean 주입 감지**: 스프링의 다양한 빈 주입 방법을 인식
   - 생성자 주입 (Constructor Injection)
   - Setter 주입 (Setter Injection)
   - 필드 주입 (@Autowired)
   - Lombok 기반 주입 (@RequiredArgsConstructor 등)

2. **코드 렌즈 (CodeLens)**: 빈이 주입된 필드/매개변수에 아이콘 표시
3. **네비게이션**: 클릭으로 빈 구현체 클래스로 이동
4. **빈 검색**: 프로젝트 내 모든 빈 정의 탐색

## 프로젝트 구조
- **메인 진입점**: [src/extension.ts](mdc:src/extension.ts) - Extension 활성화 및 초기화
- **빌드 설정**: [webpack.config.js](mdc:webpack.config.js) - 번들링 구성
- **패키지 정보**: [package.json](mdc:package.json) - Extension 메타데이터 및 의존성
- **TypeScript 설정**: [tsconfig.json](mdc:tsconfig.json) - 컴파일러 옵션

## 기술 스택
- **언어**: TypeScript
- **빌드 도구**: Webpack
- **테스트**: VSCode Test API
- **린팅**: ESLint

## 개발 단계
1. **Phase 1**: Java 파일에서 @Autowired 어노테이션 탐지
2. **Phase 2**: 생성자 주입 및 Setter 주입 지원
3. **Phase 3**: Lombok 어노테이션 지원 (@RequiredArgsConstructor, @AllArgsConstructor)
4. **Phase 4**: Kotlin 지원 확장

## 아키텍처 원칙
- **모듈성**: 각 기능을 독립적인 모듈로 분리
- **확장성**: 새로운 Spring 어노테이션 및 패턴 쉽게 추가 가능
- **성능**: 파일 변경 시에만 재분석, 캐싱 활용
- **사용자 경험**: 직관적인 UI/UX, 빠른 응답 시간

## 주요 클래스 (예정)
- `SpringBeanDetector`: 스프링 빈 주입 패턴 탐지
- `BeanDefinitionProvider`: 빈 정의 정보 제공
- `NavigationProvider`: 빈 구현체로의 네비게이션 처리
- `CodeLensProvider`: Editor에 아이콘 표시
